 IIFE内的var穿透了块作用域，name被提升至if()之前，且此时name为undefined。
 
 在非匿名自执行函数中，函数变量为只读状态无法修改,所以打印的是函数
    var b = 10;
    (function b(){
       b = 20;
        console.log(b); //function b(){...} 
    })();


数组交集
   let a = new Set([1,5,8,2,3,1])
    let b = new Set([5,4,9,2,3,1])
    let c = [...a].filter( (n)=>{
       return b.has(n)
    } )

NextTick:获取更新之后的dom节点
不能立即获取更新之后的dom是由于vue异步更新队列，其原理：操作dom后会加入到一个队列中，如果同一个执行多次只会推入一次(去重作用)，执行栈执行完后将任务队列的任务推入

白屏时间：输入url到渲染第一个元素/出现第一个元素的时间。
   在页面下的title后加window.pageStartTime = Date.now(); 在css加载完后加 window.firstPaint = Date.now();
   在控制台firstPaint - performance.timing.navigationStart  输出
首屏时间：输入url到首屏页面渲染完成的时间。
   在首屏可见模块后增加window.firstScreen = Date.now(); 控制台打印firstScreen- performance.timing.navigationStart
解决方法：路由懒加载，按需加载ui框架，gzip;项目依赖优化（依赖优化详细链接）
https://blog.csdn.net/weixin_42604828/article/details/93324751?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-1.baidujs&dist_request_id=&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-1.baidujs
 
 数据类型：null;undefinded;boolean;string;object;number;symbol;bigint;8种
 判断数据类型的方法：
 1.typeof(obj)  2.obj.constructor == Object  3.Object.getPrototypeOf(obj)  4.Object.prototype.toString.call(obj) 
 5.obj instanceOf Object(此种方法不能对一般定义的string,number;除非 var str = new String('con')

content-visibility:auto//渲染可视化区域，缺点目前兼容性不好，存在元素高度塌陷的问题（contain-intrinsic-size初始高度解决）
content-visibility: hidden.利用缓存绘制状态的优点，使内容不显示在屏幕上而又不绘制。隐藏的方法display：none;visibility:hidden;content-visibility: hidden
  
  https://web.dev/measure/  优化googles算法
  调用第三方js插件时，js文件放在index.html，js代码要放在mounted函数中以便进行数据交互并用this指向全局获取数据
  
  append|prepend这类函数在li中插入标签时注意要使用eq(index)，不可使用$(node)[index]这种格式，否则将输出字符串而不是html代码
  本地使用load()引用html本地存在一个跨域问题,
  解决方法：vscode使用插件list server在html文件右击选择‘open with list server’即可，或者解决跨域问题
   
   在ssr下当webp图片文件加载不出来时，是图片接口类型变成了text/html
   解决：webpack.base.conf.js下对图片的限制limit值小了，调大到一定量就可以
   
   随屏幕大小变换变字体大小
    function setRem(){
        p1()
        p2()
    }
    function p2(){
        /*获取当前页面的宽度*/
        var width = $('.main').width();
        /*通过标签名称来获取元素*/
        var htmlFont=document.getElementsByClassName('p2')[0];
        // 给获取到的元素的字体大小赋值
        htmlFont.style.fontSize =width/50+'px'
    }
    function p1(){
        /*获取当前页面的宽度*/
        var width = $('.main').width();
        /*通过标签名称来获取元素*/
        var htmlFont=document.getElementsByClassName('p1')[0];
        // 给获取到的元素的字体大小赋值
        htmlFont.style.fontSize =width/20+'px'
    }
     setRem();
     window.onresize=setRem;  //监听屏幕变化

vue插入视频页面报：Refused to display 'https://www.youtube.com/watch?v=BTqy7c-Vuus' in a frame because it set 'X-Frame-Options' to 'sameorigin'.错误
这是一种浏览器的安全机制，为了避免劫持的攻击。解决方法:https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/X-Frame-Options


//减少回流  重绘不一定会回流，但回流一定会重绘
1.减少don的增删操作
2.元素的高宽，边框，字体大小，页面第一次加载这类操作会触发回流，定义在class中并设置class名，执行一次回流
3.对复制的元素比如动画让器脱离文档流，position属性设为absolute或fixed，这样此元素就脱离了文档流，它的变化不会影响到其他元素。
4.这些元素会进行回流，offsetTop,offsetLeft...scrollTop滚动事件等，display:none不会触发回流
5.transform,opacity,filters这样css3的属性不会触发回流

防抖/节流的原理----https://segmentfault.com/a/1190000018428170
防抖：无论你执行多少次，我就执行最后一次，该函数在指定的时间期限内工作一次，重在清零 clearTimeout
节流：控制流量，单位时间内事件只能触发一次，该函数在指定的时间期限内不再工作
import debounce from '@/utils/auth'
 fun:debounce(function(index,item){
 // -----doing
 },500})
export function debounce(fn,delay){
  var timer = true
  return function() {
    if(!timer) {
      return false
    }
    timer = false
    let args = arguments
    setTimeout(()=>{
    fn.apply(this,args)
    timer = true
    },delay)
  }
}
window.onscroll = throttle(() => fun(), 2000)//使用匿名函数来作为参数赋值
    function throttle(fun, delay) {
        let self = this, arg = arguments
        return function () {
            if (!timer) {
                return false
            }
            timer = false
            setTimeout(() => {
                fun.apply(self, arg)
                timer = true
            }, delay)
            // console.log(timer)
        }
    }
    
webpack:
deleteOriginalAssets: false //删除原文件

水平垂直居中：父元素设为display:flex。子元素设置margin:auto

localStorage.setItem(key，value)设置本地级存储
localStorage.getItem(key)获取本地级存储
localStorage.removeItem("key");删除存储

vuex:
1.state://仓库一般存放数据，this.$store.state.name  
2. getters://获取值并缓存，也可访问对象的属性，依赖发生改变则重新计算  
3.  mutations://同步更改state中的状态，commit('state',value)
4.  actions:{//提交到mutations，异步操作，store.dispatch('increment') 
5.modules模块化组件

关于一个域名下存放俩个vue项目
前台：
1.在config.js下配置build,    assetsSubDirectory: './static'和 assetsPublicPath: '/路径名'
2.在router下的index中配置   mode: 'history'和 base:'/路径名/'
3.在打包的dist中的index.html中增加  <meta base='/路径名/'>
其他在nginx中配置   https://www.cnblogs.com/dzcici/p/13877338.html

vue-piczoom 放大镜设置mouse-cover-canvas布设置top无效--------原因是以#app进行定位，所以应在app.vue中设置top值（组件包含在一个有固定高宽的容器内width:500px;height:500px）

fildder抓取工具如何抓取js,css等其他数据,主要是在‘tools’中配置https与connections的选项，以及导入安全证书

fiddler抓取数据包的时候出现乱码，在‘transformer’中选择'None'

关于图片压缩建议压缩成webp格式，压缩比例较高，并且相对与其他格式压缩后图片清晰度有明显优势 ------https://zhitu.isux.us/

https://animate.style/ --------
var height = window.innerHeight
var scoll_2 = $('.name').offset().top - height/2
 $(window).scroll(function(){
        var winp = $(document).scrollTop();
        if(scoll_2 && winp > scoll_2){
                $('.sect1 .box2').fadeIn();
                // scoll_3 = $('.name').offset().top - height/2 //获取下一个动画到顶高度
                scoll_2=false
            }
        }
animate + scrollTop  让页面动起来
BCompare 文件对比工具
CDN:https://cdnjs.com/  拥有大量前端插件的相关引用文件 

倒计时插件：https://countdownmail.com/拥有各种时区时间的一款倒计时

wave波浪效果(目前发现只能应用到点击事件中)
http://ch-ny.com/content/themes/bridge-child/js/libs/Waves/docs/
html: <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/node-waves/0.7.6/waves.min.css" integrity="sha512-bsNktdxsLu4ooy7axuzyyFz87SWrDBaCmZsk2Dvin1/2noq49vt1jfNWUAfdybRpFCzRjdWygAOEopdbo8cGpA==" crossorigin="anonymous" />
      <script src="https://cdnjs.cloudflare.com/ajax/libs/node-waves/0.7.6/waves.min.js" integrity="sha512-MzXgHd+o6pUd/tm8ZgPkxya3QUCiHVMQolnY3IZqhsrOWQaBfax600esAw3XbBucYB15hZLOF0sKMHsTPdjLFg==" crossorigin="anonymous"></script>
      <span class="img1 waves-effect">
            <div style="width: 300px;height: 300px; position: relative;"></div>
      </span>
js:  Waves.displayEffect();

H5 notification浏览器桌面通知
详细：https://www.cnblogs.com/zhangycun/p/10410445.html

lottie动画设置的俩种方式：（好处json文件大小会比gif文件小很多，性能也会更好）
<script src="https://cdnjs.cloudflare.com/ajax/libs/bodymovin/5.4.3/lottie.min.js"></script>
#lottie{
    overflow: hidden;
    transform: translate3d(0,0,0);
    text-align: center;
    opacity: 1;
}
1：  html,<script type="text/javascript" src="./data.json"></script>
     json: var lottie = {动画json代码}//一定要设置将json赋值变量，否则报错
     js: var anim2 = lottie.loadAnimation({
        container: document.getElementById("lottie2"), // 容器
        renderer: "svg",
        loop: true,
        autoplay: true,
        animationData:lottle1,
      });
2：  var anim = lottie.loadAnimation({
        container: document.getElementById("lottie"), // 容器
        renderer: "svg",
        loop: true,
        autoplay: true,
        // animationData:lottle1,
        path:"https://assets5.lottiefiles.com/datafiles/B1zOc97lUJINcA2/data.json" // 直接设置json链接
      });
vue如何在js文件中设置i18n国际化
window.vm = new Vue({
  el: '#app',
  router,
  i18n,
  store,
  render: h => h(App)
})
window.vm.$t(‘name’)//js中使用

根据不同的国际化语言设置不同的样式
document.getElementsByTagName('html')[0].setAttribute('lang',Cookies.get('lang') === 'en'? 'en' : 'zh');//判断当前语言并加入html
.classNamer:lang(en) {// css判断当前环境是否是’en’
Css
}

在路由中定义vue-i8n国际化
路由中设置：title: 'router.name'
vue:{{$t(item.title) }}

谷歌登录不能切换账号问题
  var auth2 = gapi.auth2.getAuthInstance(); 
  auth2.signOut()
  auth2.disconnect();//清除登录权限
按照谷歌官网XHR接口回调的数据是字符串(两种字符串与xml)，因用JSON.parse()改成json格式方便操作
 xhr.onreadystatechange=function(data){
              if(xhr.status === 200 && xhr.readyState === 4){
                  let req = JSON.parse(xhr.responseText).data.token//xhr.responseText 获取参数
                  setToken(req,'google')
                  that.$store.dispatch('saveToken',req)
                }
             }
Swiper自定义分页器格式
 var arr = ['Iceberg Silver','Graphite Black','Mist Grey'] //分页器文字
      var _html = `<span class="select_box"></span>`
      $('.swiper-pagination-bullet').each(function(index){
          $(this).html(_html+arr[index])
      })
http 400错误码url格式
{name:'goatling'} 这种形式根本不是标准JSON字符串
  '{"name":"goatling"}'  这个才是标准JSON字符串
  Json.stringify()等，可能与后台接口不一致导致报错
关于vuex刷新值初始化问题可使用：sessionStorage代替存放
